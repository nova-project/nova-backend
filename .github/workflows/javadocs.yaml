name: JavaDocs

on:
  push:
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
    paths-ignore: [ '**.md' ]

jobs:
  check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v2.1.0
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run checks with Gradle
        run: ./gradlew check --stacktrace --no-daemon

  docs:
    needs: check
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v2.1.0
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build JavaDocs with Gradle
        run: ./gradlew clean :aggregateJavadoc --stacktrace --no-daemon

      - name: Create Version
        id: version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "::set-output name=version::$VERSION"

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          branch: gh-pages
          folder: nova-starter/build/docs/javadoc
          target-folder: javadoc/${{ steps.version.outputs.version }}
          clean: true
          debug: true
          git-config-name: GitHub Actions
          git-config-email: actions@github.com
